GetWorkSchedule:
  handler: src/lambda/http/v1/schedule/getWorkSchedule.handler
  events:
    - http:
        method: get
        path: /v1/schedule/{year}/{month}
        cors: true
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId: { Ref: MyApiGatewayAuthorizer }
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.SCHEDULE_TABLE}

CreateWorkSchedule:
  handler: src/lambda/http/v1/schedule/createWorkSchedule.handler
  events:
    - http:
        method: post
        path: /v1/schedule
        cors: true
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId: { Ref: MyApiGatewayAuthorizer }
        request:
          schema:
            application/json: ${file(src/lambda/http/v1/validation/create-schedule-schema.json)}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.SCHEDULE_TABLE}

DeleteWorkSchedule:
  handler: src/lambda/http/v1/schedule/deleteWorkSchedule.handler
  events:
    - http:
        method: delete
        path: /v1/schedule/{year}/{month}
        cors: true
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId: { Ref: MyApiGatewayAuthorizer }
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DeleteItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.SCHEDULE_TABLE}
